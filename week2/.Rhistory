markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend))
skiMap <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend))
skiMapCluster <- skiMap %>% addMarkers(clusterOptions = markertClusterOptions())
skiMapCluster <- skiMap %>% addMarkers(clusterOptions = markerClusterOptions())
skiMapCluster
skiMap <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name) %>%
addLegend(labels = c("Easy", "Medium", "Difficult"),
colors = c("green", "blue", "black"))
skiMap
??markerColor
skiMap
skiMap
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name) %>%
addLegend(labels = c("Easy", "Medium", "Difficult"),
colors = c("#72AF26", "#36A4D5", "#303030"))
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name) %>%
addLegend(position = "bottomright", title = "Resort slope's difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = c("#72AF26", "#36A4D5", "#303030"))
hcl.colors(10, palette='Spectral', rev = T)
str(hcl.colors(10, palette='Spectral', rev = T))
str(c("#72AF26", "#36A4D5", "#303030"))
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
# Create secondary map using cluster options to simplify map
# Clusters' markers will be colored according to the max of sums of slop_trend colors
skiMapCluster <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions(
iconCreateFunction = ~JS(paste0("function (cluster) {
var markers = cluster.getAllChildrenMarkers();
var greenMarkers = 0;
var blueMarkers = 0;
var blackMarkers = 0;
var clusterColor = #000000;
for (i =0; i < markers.length; i++) {
if (markers[i].options.trend == "green") {
greenMarkers += 1; }
else if (markers[i].options.trend == "blue") {
blueMarkers += 1;  }
else {
blackMarkers += 1; }
}
if (greenMarkers >= blueMarkers) {
if (greenMarkers >= blackMarkers) {
clusterColor = #72AF26; }
else {
clusterColor = #303030; }
}
else {
if (greenMarkers >= blackMarkers) {
clusterColor = #36A4D5; }
else {
clusterColor = #303030; }
}
return L.divIcon({
html: '<div style=\"background-color:'+clusterColor+'\"><span>'+avg+'</span></div>',
className: 'marker-cluster',
iconSize: new L.Point(40, 40) });
}")))) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions(
iconCreateFunction = ~JS(paste0("function (cluster) {
var markers = cluster.getAllChildrenMarkers();
var greenMarkers = 0;
var blueMarkers = 0;
var blackMarkers = 0;
var clusterColor = #000000;
for (i =0; i < markers.length; i++) {
if (markers[i].options.trend == green) {
greenMarkers += 1; }
else if (markers[i].options.trend == blue) {
blueMarkers += 1;  }
else {
blackMarkers += 1; }
}
if (greenMarkers >= blueMarkers) {
if (greenMarkers >= blackMarkers) {
clusterColor = #72AF26; }
else {
clusterColor = #303030; }
}
else {
if (greenMarkers >= blackMarkers) {
clusterColor = #36A4D5; }
else {
clusterColor = #303030; }
}
return L.divIcon({
html: '<div style=\"background-color:'+clusterColor+'\"><span>'+avg+'</span></div>',
className: 'marker-cluster',
iconSize: new L.Point(40, 40) });
}")))) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions(
iconCreateFunction = ~JS(paste0("function (cluster) {
var markers = cluster.getAllChildrenMarkers();
var greenMarkers = 0;
var blueMarkers = 0;
var blackMarkers = 0;
var clusterColor = #000000;
for (i =0; i < markers.length; i++) {
if (markers[i].options.trend == green) {
greenMarkers += 1; }
else if (markers[i].options.trend == blue) {
blueMarkers += 1;  }
else {
blackMarkers += 1; }
}
if (greenMarkers >= blueMarkers) {
if (greenMarkers >= blackMarkers) {
clusterColor = #72AF26; }
else {
clusterColor = #303030; }
}
else {
if (greenMarkers >= blackMarkers) {
clusterColor = #36A4D5; }
else {
clusterColor = #303030; }
}
return L.divIcon({
html: '<div style=\"background-color:'+clusterColor+'\"><span>'+avg+'</span></div>',
className: 'marker-cluster',
iconSize: new L.Point(40, 40) });
}"))))
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions(
iconCreateFunction = ~JS(paste0("function (cluster) {
var markers = cluster.getAllChildrenMarkers();
var greenMarkers = 0;
var blueMarkers = 0;
var blackMarkers = 0;
var clusterColor = #000000;
for (i =0; i < markers.length; i++) {
if (markers[i].options.trend == green) {
greenMarkers += 1; }
else if (markers[i].options.trend == blue) {
blueMarkers += 1;  }
else {
blackMarkers += 1; }
}
if (greenMarkers >= blueMarkers) {
if (greenMarkers >= blackMarkers) {
clusterColor = #72AF26; }
else {
clusterColor = #303030; }
}
else {
if (greenMarkers >= blackMarkers) {
clusterColor = #36A4D5; }
else {
clusterColor = #303030; }
}
return L.divIcon({
html: '<div style=\"background-color:'+clusterColor+'\"><span>'+avg+'</span></div>',
className: 'marker-cluster',
iconSize: new L.Point(40, 40) });
}"))))
# Create secondary map using cluster options to simplify map
# Clusters' markers will be colored according to the max of sums of slop_trend colors
skiMapCluster <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions()) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
# Create map using ad-hoc icons from font awesome: https://github.com/rstudio/fontawesome
# Markers will be colored according to slope_trend
skiLegend <- c("#72AF26", "#36A4D5", "#303030")
# Create secondary map using cluster options to simplify map
# Clusters' markers will be colored according to the max of sums of slop_trend colors
skiMapCluster <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions()) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
skiMapCluster
rm(list = ls())
??markerClusterOptions
?markerClusterOptions
knitr::opts_chunk$set(echo = TRUE)
# Libraries used for this work
library(knitr)
library(leaflet)
library(fontawesome)
library(dplyr)
# US ski resorts data url
skiURL <- "https://gist.githubusercontent.com/Ewiseman/b251e5eaf70ca52a4b9b10dce9e635a4/raw/9f0100fe14169a058c451380edca3bda24d3f673/ski_resort_stats.csv"
# Download ski data from public URL omitting rows with NA values and pre-process
skiData <- na.omit(read.csv(url(skiURL)))
# Identify the highest percentage of slope types (green, blue or black)
skiData <- skiData %>%
mutate (slope_trend =
if_else(green_percent >= blue_percent,
if_else(green_percent >= black_percent, 'green', 'black'),
if_else(blue_percent >= black_percent, 'blue', 'black')))
# Create map using ad-hoc icons from font awesome: https://github.com/rstudio/fontawesome
# Markers will be colored according to slope_trend
# Markers will have as pop-up the ski resort_name
skiMap <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name)
skiLegend <- c("#72AF26", "#36A4D5", "#303030")
skiMap
# Legend will be added to show meaning of markers' color
skiLegend <- c("#72AF26", "#36A4D5", "#303030")
# Create secondary map using cluster options to simplify map
skiMapCluster <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
clusterOptions = markerClusterOptions(
iconCreateFunction = JS("
function(cluster) {
return new L.DivIcon({
html: '<div style=\"background-color:rgba(77,77,77,0.5)\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}")
)) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
skiMapCluster
skiMapCluster <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
clusterOptions = markerClusterOptions(
iconCreateFunction = JS("
function(cluster) {
return new L.DivIcon({
html: '<div style=\"background-color:'#000000'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}"))) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
skiMapCluster
skiMapCluster <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
clusterOptions = markerClusterOptions(
iconCreateFunction = JS("
function(cluster) {
return new L.DivIcon({
html: '<div style=\"background-color:#000000\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}"))) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
skiMapCluster
# Legend will be added to show meaning of markers' color
skiLegend <- c("#72AF26", "#36A4D5", "#303030")
# Create secondary map using cluster options to simplify map
skiMapCluster <- leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions(
iconCreateFunction = JS("
function(cluster) {
var markers = cluster.getAllChildMarkers();
var greenMarkers = 0;
var blueMarkers = 0;
var blackMarkers = 0;
for (i = 0; i < markers.length; i++) {
if (markers[i].options.trend = 'green') {greenMarkers += 1;}
else if (markers[i].options.trend = 'blue') {blueMarkers += 1;}
else {blackMarkers += 1;}
}
if (greenMarkers >= blueMarkers) {
if (greenMarkers >= blackMarkers) {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(113,174,38,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
else {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(48,48,48,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
}
else {
if (blueMarkers >= blackMarkers) {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(55,168,218,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
else {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(48,48,48,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
}
}"))) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
skiMapCluster
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions(
iconCreateFunction = JS("
function(cluster) {
var markers = cluster.getAllChildMarkers();
var greenMarkers = 0;
var blueMarkers = 0;
var blackMarkers = 0;
for (i = 0; i < markers.length; i++) {
if (markers[i].options.trend = 'green') {greenMarkers += 1;}
else if (markers[i].options.trend = 'blue') {blueMarkers += 1;}
else {blackMarkers += 1;}
}
if (greenMarkers >= blueMarkers) {
if (greenMarkers >= blackMarkers) {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(113,174,38,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
else {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(48,48,48,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
}
else {
if (blueMarkers >= blackMarkers) {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(55,168,218,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
else {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(48,48,48,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
}
}"))) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
leaflet(data = skiData) %>%
addTiles() %>%
addAwesomeMarkers(~lon, ~lat,
icon = makeAwesomeIcon(text = fa(name = "skiing",
fill = "white"),
markerColor = ~slope_trend),
popup = ~resort_name,
options = markerOptions(trend = ~slope_trend),
clusterOptions = markerClusterOptions(
iconCreateFunction = JS("
function(cluster) {
var markers = cluster.getAllChildMarkers();
var greenMarkers = 0;
var blueMarkers = 0;
var blackMarkers = 0;
for (i = 0; i < markers.length; i++) {
if (markers[i].options.trend = 'green') {greenMarkers += 1;}
else if (markers[i].options.trend = 'blue') {blueMarkers += 1;}
else {blackMarkers += 1;}
}
console.log(greenMarkers);
if (greenMarkers >= blueMarkers) {
if (greenMarkers >= blackMarkers) {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(113,174,38,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
else {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(48,48,48,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
}
else {
if (blueMarkers >= blackMarkers) {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(55,168,218,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
else {
return new L.DivIcon({
html: '<div style=\"background-color:'rgba(48,48,48,0.5)'\"><span>' + cluster.getChildCount() + '</div><span>',
className: 'marker-cluster'
});
}
}
}"))) %>%
addLegend(position = "bottomright", title = "Resort slopes' difficulty",
labels = c("Easy", "Medium", "Hard"),
colors = skiLegend)
