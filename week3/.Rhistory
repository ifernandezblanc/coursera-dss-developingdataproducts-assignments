setwd("~/Documents/courses/coursera_dss_developingdataproducts_assignments/week3")
install.packages("quantmod")
library(quantmod)
install.packages("BatchGetSymbols")
library(BatchGetSymbols)
library(plotly)
firstDate <- Sys.Date()-365
lastDate <- Sys.Date()
tickers <- c('BTC-USD', 'ETH-USD', 'ADA-USD')
crypto <- BatchGetSymbols(tickers, firstDate, lastDate)
str(crypto)
str(getSymbols("BTC-USD"))
str(getSymbols("BTC-USD", auto.assign = F))
rm(BTC-USD)
rm("BTC-USD")
crypto
str(crypto)
rm(crypto)
btc <- c('BTC-USD')
eth <- c('ETH-USD')
ada <- c('ADA-USD')
rm(tickers)
btcData <- BatchGetSymbols(btc, firstDate, lastDate)
ethData <- BatchGetSymbols(eth, firstDate, lastDate)
adaData <- BatchGetSymbols(ada, firstDate, lastDate)
adaPlot <- adaData$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick", open = ~price.open, close = ~price.close, high = ~price.high, low = ~price.low)
adaPlot
crypto <- c('BTC-USD', 'ETH-USD', 'ADA-USD')
cryptoData <- BatchGetSymbols(tickers, firstDate, lastDate)
cryptoData <- BatchGetSymbols(crypto, firstDate, lastDate)
plot <- adaData$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick", open = ~price.open, close = ~price.close, high = ~price.high, low = ~price.low, color = ~tickers)
plot
plot <- adaData$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick", open = ~price.open, close = ~price.close, high = ~price.high, low = ~price.low, color = ~ticker)
plot
rm(cryptoData)
rm(crypto)
rm(adaPlot)
rm(plot)
plot <- adaData$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick", open = ~price.open, close = ~price.close, high = ~price.high, low = ~price.low, increasing = "blue", decreasing = "yellow")
plot
plot <- adaData$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick", open = ~price.open, close = ~price.close, high = ~price.high, low = ~price.low, increasing = "blue", decreasing = yellow)
adaI <- list(line = list(color = '#17BECF'))
adaD <- list(line = list(color = '#7F7F7F'))
plot <- adaData$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick", open = ~price.open, close = ~price.close, high = ~price.high, low = ~price.low, increasing = adaI, decreasing = adaD)
plot
ethI <- list(line = list(color = '#5D48B4'))
ethD <- list(line = list(color = '#FF9933'))
plot <- ethData$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick", open = ~price.open, close = ~price.close, high = ~price.high, low = ~price.low, increasing = ethI, decreasing = ethD)
plot
df1 <- read.table(text="X variable       value
1 1       SH 0.002814895
2 1       VH 0.002591173
3 1       SS 0.002599700
4 1      HCG 0.002810790", header=TRUE)
df2 <- read.table(text="   X variable       value
1 1       SH 0.000982607
2 1       VH 0.000917569
3 1       SS 0.000911039
4 1      HCG 0.000971009", header=TRUE)
df12 <- merge(df1, df2, by=c("X","variable"))
str(df12)
str(ethData)
data <- BatchGetSymbols('ADA-USD', firstDate, lastDate)
rm(list = ls())
firstDate <- Sys.Date()-365
lastDate <- Sys.Date()
# Download data financial data from web
btcData <- BatchGetSymbols('BTC-USD', firstDate, lastDate)
ethData <- BatchGetSymbols('ETH-USD', firstDate, lastDate)
adaData <- BatchGetSymbols('ADA-USD', firstDate, lastDate)
# Trim data needed (ticker, ref.date, price.open, price.close, price.low, price.high)
btcData <- btcData$df.tickers[c("ticker", "ref.date", "price.open", "price.high",
"price.low", "price.close")]
ethData <- ethData$df.tickers[c("ticker", "ref.date", "price.open", "price.high",
"price.low", "price.close")]
adaData <- adaData$df.tickers[c("ticker", "ref.date", "price.open", "price.high",
"price.low", "price.close")]
cryptoData <- merge(btcData, ethData, adaData, by = c("ref.date"))
str(adaData)
df1 <- read.table(text="X variable       value
1 1       SH 0.002814895
2 1       VH 0.002591173
3 1       SS 0.002599700
4 1      HCG 0.002810790", header=TRUE)
df2 <- read.table(text="   X variable       value
1 1       SH 0.000982607
2 1       VH 0.000917569
3 1       SS 0.000911039
4 1      HCG 0.000971009", header=TRUE)
df12 <- merge(df1, df2, by=c("X","variable"))
str(df12)
iris
p <- iris %>%
plot_ly(
type = 'scatter',
x = ~Sepal.Length,
y = ~Petal.Length,
text = ~Species,
hoverinfo = 'text',
mode = 'markers',
transforms = list(
list(
type = 'filter',
target = ~Species,
operation = '=',
value = unique(iris$Species)[1]
)
)) %>% layout(
updatemenus = list(
list(
type = 'dropdown',
active = 0,
buttons = list(
list(method = "restyle",
args = list("transforms[0].value", unique(iris$Species)[1]),
label = unique(iris$Species)[1]),
list(method = "restyle",
args = list("transforms[0].value", unique(iris$Species)[2]),
label = unique(iris$Species)[2]),
list(method = "restyle",
args = list("transforms[0].value", unique(iris$Species)[3]),
label = unique(iris$Species)[3])
)
)
)
)
p
rm(list = ls())
firstDate <- Sys.Date()-365
lastDate <- Sys.Date()
incColor <- list(line = list(color = '#17BECF'))
decColor <- list(line = list(color = '#7F7F7F'))
# Create a candlestick chart to visualize last year's prices filtering by currency
plot <- crypto %>% plot_ly(x = ~ref.date, type = "candlestick",
open = ~price.open, close = ~price.close,
high = ~price.high, low = ~price.low,
increasing = incColor, decreasing = decColor)
firstDate <- Sys.Date()-365
lastDate <- Sys.Date()
# Download cryptocurrencies data from web using BatchGetSymbols:
# https://cran.r-project.org/web/packages/BatchGetSymbols/BatchGetSymbols.pdf
tickers <- c('BTC-USD', 'ETH-USD', 'ADA-USD')
crypto <- BatchGetSymbols(tickers, firstDate, lastDate)
# Propose some colors to visualize last year's cryptocurrencies prices
incColor <- list(line = list(color = '#17BECF'))
decColor <- list(line = list(color = '#7F7F7F'))
# Create a candlestick chart to visualize last year's prices filtering by currency
plot <- crypto %>% plot_ly(x = ~ref.date, type = "candlestick",
open = ~price.open, close = ~price.close,
high = ~price.high, low = ~price.low,
increasing = incColor, decreasing = decColor)
plot <- crypto$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick",
open = ~price.open, close = ~price.close,
high = ~price.high, low = ~price.low,
increasing = incColor, decreasing = decColor)
plot
firstDate <- Sys.Date()-365
lastDate <- Sys.Date()
# Download cryptocurrencies data from web using BatchGetSymbols:
# https://cran.r-project.org/web/packages/BatchGetSymbols/BatchGetSymbols.pdf
tickers <- c('ETH-USD', 'ADA-USD')
crypto <- BatchGetSymbols(tickers, firstDate, lastDate)
# Propose some colors to visualize last year's cryptocurrencies prices
incColor <- list(line = list(color = '#17BECF'))
decColor <- list(line = list(color = '#7F7F7F'))
# Create a candlestick chart to visualize last year's prices filtering by currency
plot <- crypto$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick",
open = ~price.open, close = ~price.close,
high = ~price.high, low = ~price.low,
increasing = incColor, decreasing = decColor)
plot
firstDate <- Sys.Date()-365
lastDate <- Sys.Date()
# Download cryptocurrencies data from web using BatchGetSymbols:
# https://cran.r-project.org/web/packages/BatchGetSymbols/BatchGetSymbols.pdf
tickers <- c('BTC-USD', 'ETH-USD')
crypto <- BatchGetSymbols(tickers, firstDate, lastDate)
# Propose some colors to visualize last year's cryptocurrencies prices
incColor <- list(line = list(color = '#17BECF'))
decColor <- list(line = list(color = '#7F7F7F'))
# Create a candlestick chart to visualize last year's prices filtering by currency
plot <- crypto$df.tickers %>% plot_ly(x = ~ref.date, type = "candlestick",
open = ~price.open, close = ~price.close,
high = ~price.high, low = ~price.low,
increasing = incColor, decreasing = decColor)
plot
# Propose some colors to visualize last year's Bitcoin prices
incColor <- list(line = list(color = '#17BECF'))
rm(list = ls())
